<?php
/*******************************************************************************
// Функция определяет является ли указанный год високосным
*******************************************************************************/  
function isLeap($year) {
	return ((($year % 4)==0) && (($year % 100)!=0) || (($year % 400)==0)) ? true : false;
}
/*******************************************************************************
// Функция определяет количество дней в месяце
*******************************************************************************/  
function numDays ($month, $year) {
	$dim = array(31,28,31,30,31,30,31,31,30,31,30,31);
	return ($month == 2 && isLeap($year)) ? 29 : $dim[(int)$month-1];
}
/*******************************************************************************
// Функция возвращает дату по старому стилю
*******************************************************************************/  
function oldStyle($format, $month, $day, $year){
	$replace = array ();
	$week = array('Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота');
	$wk = array ('Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб');
	$dd = ($year-$year%100)/100 - ($year-$year%400)/400 - 2;
	for ($i=0; $i<7; $i++) {
		$di = ($i+$dd)%7;								// Смещение дня недели
		$replace[$week[$i]] = $week[$di];
		$replace[$wk[$i]] = $wk[$di];
	}
	return  strtr ( dateRU ( date( $format, mktime ( 0, 0, 0, $month, $day, $year ) - ( $dd*24*3600 ) ) ), $replace );
}
/*******************************************************************************
// Перевод названия месяца на русский язык (именительный падеж, заглавная буква)
*******************************************************************************/  
function monthRU ( $str ) {
	$replace = array (	'January' => 'Январь',
						'February' => 'Февраль',
						'March' => 'Март',
						'April' => 'Апрель',
						'May' => 'Май',
						'June' => 'Июнь',
						'July' => 'Июль',
						'August' => 'Август',
						'September' => 'Сентябрь',
						'October' => 'Октябрь',
						'November' => 'Ноябрь',
						'December' => 'Декабрь');
	return strtr ( $str, $replace );
}
/*******************************************************************************
// Перевод даты на русский язык (родительный падеж, строчная буква)
*******************************************************************************/  
function dateRU ( $str ) {
	$replace = array (	'January' => 'января',
						'February' => 'февраля',
						'March' => 'марта',
						'April' => 'апреля',
						'May' => 'мая',
						'June' => 'июня',
						'July' => 'июля',
						'August' => 'августа',
						'September' => 'сентября',
						'October' => 'октября',
						'November' => 'ноября',
						'December' => 'декабря',
						'Jan' => 'янв',
						'Feb' => 'фев',
						'Mar' => 'мар',
						'Apr' => 'апр',
						'May' => 'мая',
						'Jun' => 'июн',
						'Jul' => 'июл',
						'Aug' => 'авг',
						'Sep' => 'сен',
						'Oct' => 'окт',
						'Nov' => 'ноя',
						'Dec' => 'дек',
						'Monday' => 'Понедельник',
						'Tuesday' => 'Вторник',
						'Wednesday' => 'Среда',
						'Thursday' => 'Четверг',
						'Friday' => 'Пятница',
						'Saturday' => 'Суббота',
						'Sunday' => 'Воскресенье',
						'Mon' => 'Пн',
						'Tue' => 'Вт',
						'Wed' => 'Ср',
						'Thu' => 'Чт',
						'Fri' => 'Пт',
						'Sat' => 'Сб',
						'Sun' => 'Вс'
					);
	return strtr ( $str, $replace );
}
/*******************************************************************************
// Функция определяет день Пасхи на заданный год
*******************************************************************************/  
function easter($format, $year, $old=false) {
	$a=((19*($year%19)+15)%30);
	$b=((2*($year%4)+4*($year%7)+6*$a+6)%7);
	if ($a+$b>9) {
		$day=$a+$b-9; 
		$month=4;
	} else {
		$day=22+$a+$b; 
		$month=3;
	}
	if ($old) $dd = 0;
	else $dd = ($year-$year%100)/100 - ($year-$year%400)/400 - 2;
	return  dateRU ( date( $format, mktime ( 0, 0, 0, $month, $day, $year ) + ( $dd*24*3600 ) ) );
}
/*******************************************************************************
// Функция определяет название Седмицы (Недели) по годичному кругу богослужений
*******************************************************************************/  
function sedmica ($month, $day, $year) {			
	$cd = date( 'z', mktime ( 0, 0, 0, $month, $day, $year )); 	// Порядковый номер дня в году
	$ed = easter('z', $year);									// Порядковый номер дня пасхи в году
	$wd = date( 'w', mktime ( 0, 0, 0, $month, $day, $year )); 	// Порядковый номер дня недели от 0 (воскресенье) до 6 (суббота)
	
	if ($cd < $ed-70) {				// До Недели о мытаре и фарисее идут седмицы по Пятидесятнице прошлого года
		$ed = easter('z', $year-1);								// Порядковый номер дня пасхи в предыдущем году
		$nw = (int)(($cd+(isLeap($year)?366:365)-($ed+49))/7)+1;
		if ($wd == 0) return "Неделя ".($nw-1)."-я по Пятидесятнице";
		else return "Седмица ".$nw."-я по Пятидесятнице";
	}
	else if ($cd == $ed-70) return "Неделя о мытаре и фарисее";	// Седмицы подготовительные
	else if ($cd < $ed-63) return "Седмица о мытаре и фарисее";	
	else if ($cd == $ed-63) return "Неделя о блудном сыне";	
	else if ($cd < $ed-56) return "Седмица о блудном сыне";	
	else if ($cd == $ed-56) return "Неделя мясопустная, о Страшнем суде";	
	else if ($cd < $ed-49) return "Сырная седмица (масленица)";						
	else if ($cd == $ed-49) return "Неделя сыропустная. Воспоминание Адамова изгнания. Прощеное воскресенье";						
	else if ($cd < $ed-13) {									// Седмицы Великого поста
		$nw = (int)(($cd - ($ed-49))/7)+1;
		if ($wd == 0) return "Неделя ".($nw-1)."-я Великого поста";
		else return "Седмица ".$nw."-я Великого поста";
	}
	else if ($cd < $ed-7) return "Седмица 6-я Великого поста (седмица ваий)";
	else if ($cd == $ed-7) return "Неделя 6-я Великого поста ваий (цветоносная, Вербное воскресенье)";
	else if ($cd < $ed) return "Страстная седмица";
	else if ($cd == $ed) return "";
	else if ($cd < $ed+7) return "Пасхальная (Светлая) седмица";
	else if ($cd < $ed+50) {									// Седмицы по Пасхе
		$nw = (int)(($cd - $ed)/7)+1;
		if ($wd == 0) return "Неделя ".$nw."-я по Пасхе";
		else return "Седмица ".$nw."-я по Пасхе";
	}
	else  {														// Седмицы по Пятидесятнице
		$nw = (int)(($cd - ($ed+49))/7)+1;
		if ($wd == 0) return "Неделя ".($nw-1)."-я по Пятидесятнице";
		else return "Седмица ".$nw."-я по Пятидесятнице";
	}

	return "";
}
/*******************************************************************************
// Функция получает данные из XML файла	
*******************************************************************************/  
function getXML ($xmlFile) {
//    $bg_curl_val = get_option( 'bg_bibfers_curl' );
//    $bg_fgc_val = get_option( 'bg_bibfers_fgc' );
//    $bg_fopen_val = get_option( 'bg_bibfers_fopen' );
    $bg_curl_val = 'off';
    $bg_fgc_val = 'off';
    $bg_fopen_val = 'on';
	
	$code = false;
	$url = plugins_url( $xmlFile, dirname(__FILE__ ) );			// URL файла
	if ($bg_curl_val == 'on' && function_exists('curl_init')) {	// Попытка1. Если установлен cURL				
		$ch = curl_init($url);										// создание нового ресурса cURL
		curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);				// возврат результата передачи в качестве строки из curl_exec() вместо прямого вывода в браузер
		$code = curl_exec($ch);										// загрузка текста
		$httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);										
		if ($httpCode != '200') $code = false;						// Проверка на код http 200
		curl_close($ch);											// завершение сеанса и освобождение ресурсов
	} 

	if ($bg_fgc_val == 'on' && !$code) {						// Попытка2. Если данные не получены попробуем применить file_get_contents()
		$code = file_get_contents($url);		
	}

	if ($bg_fopen_val == 'on' && !$code) {						// Попытка 3. Если данные опять не получены попробуем применить fopen() 
		$ch=fopen($url, "r" );										// Открываем файл для чтения
		if($ch)	{
			while (!feof($ch))	{$code .= fread($ch, 2097152);}		// загрузка текста (не более 2097152 байт)
			fclose($ch);											// Закрываем файл
		}
	}
	if (!$code) return false;									// Увы. Паранойя хостера достигла апогея. Файл не прочитан или ошибка
	return xml_array($code, true);								// Возвращаем PHP массив
}
/*******************************************************************************
// Функция для преобразования XML в PHP Array
*******************************************************************************/  
function xml_array($xml){
	$result = json_decode(json_encode((array)simplexml_load_string($xml)),1);
	return $result;
}
/*******************************************************************************
// Функция подготовки данных о событиях дня
*******************************************************************************/  
function dayEvents($month, $day, $year){
	global $events;
	
	$date = oldStyle('U', $month, $day, $year);						// Дата по старому стилю
	$leap = isLeap(oldStyle('Y', $month, $day, $year));				// true - если високосный год по старому стилю
	$ny =  date( 'U', mktime ( 0, 0, 0, 1, 1, $year ));				// Новый год по григорианскому календарю
	if ($date < $ny) $year -= 1;									// Если дата по старому стилю до Нового года, то это предыдущий год
	$easter = easter('U', $year, true);								// Пасха в текущем году
	$dd = ($year-$year%100)/100 - ($year-$year%400)/400 - 2;		// Отклонение григорианского календаря от юлианского в днях
	$wd = date( 'w', mktime ( 0, 0, 0, $month, $day, $year ));
	if ($wd == 3 || $wd == 5) $post = "Постный день";				// Пост по средам и пятницам
	else $post = "";
	if ($wd == 2 || $wd == 4 || $wd == 6) $noglans = "Браковенчание не совершается";	// Браковенчание не совершается накануне среды и пятницы всего года (вторник и четверг), и воскресных дней (суббота)
	else $noglans = "";
	
	$result = array();
	$cnt = count($events);
	if ($cnt) {
		for ($i=0; $i < $cnt; $i++) {
			$event = $events[$i];
			$s_date = (int) $event["s_date"];
			$s_month = (int) $event["s_month"];
			$f_date = (int) $event["f_date"];
			$f_month = (int) $event["f_month"];
			$name = $event["name"];
			
			// Если невисокосный год, то события которые приходятся на 29 февраля празднуются 28 февраля
			if (!$leap) {
				if ($s_month == 2 && $s_date == 29) $s_date == 28;
				if ($f_month == 2 && $f_date == 29) $f_date == 28;
			}
			
			if ($s_month < 0) {
				$we = date ( 'w', mktime ( 0, 0, 0, $f_month, $f_date, $year )+$dd*3600*24 );	// День недели
				$finish =  date( 'U', mktime ( 0, 0, 0, $f_month, $f_date, $year ) )+($s_date-$we)*3600*24;
				$start = $finish;
				if ($s_month == -1 && $we == $s_date) $name = "";	// Если приходится на самый день праздника, то не отмечается
			}
			else {
				if($s_month > 0) $start =  date( 'U', mktime ( 0, 0, 0, $s_month, $s_date, $year ) );
				else if ($s_month == 0) $start = $easter+$s_date*3600*24;
				
				if ($f_month > 0) $finish =  date( 'U', mktime ( 0, 0, 0, $f_month, $f_date, $year ) );
				else if ($f_month == 0) $finish =  $easter+$f_date*3600*24;
			}
			
			// Обрабатываем каллизию, связанную со сменой года
			if ($start > $finish) {
				if ($start > $date) $start -= ($leap?366:365)*3600*24;	// Начало в прошлом году
				else $finish -= ($leap?366:365)*3600*24;				// Окончание в следующем году
			}

			// Событие относится к данному дню, если 
			// - его наименование не пустое,
			// - день попадает в интервал между начальной и конечной датой события
			if ($name != "" && $date >= $start && $date <= $finish) {
				$s = $start+$dd*3600*24;
				$f = $finish+$dd*3600*24;
				$result[] = array (	"s_date" => date ("d", $s), 
									"s_month" => date ("m", $s),
									"s_year" => date ("Y", $s),
									"f_date" => date ("d", $f), 
									"f_month" => date ("m", $f),
									"f_year" => date ("Y", $f),
									"name" => $name,
									"type" => $event["type"]);
				if ($event["type"] == '10' || $event["type"] == '100') $post = "";	// Уже установлен пост по другой причине или сплошная седмица
				if ($event["type"] == '20') $noglans = "";			// Уже запрещено браковенчание по другой причине
			}
		}
	}
	if ($post != "") {												// Пост по средам и пятницам
		$result[] = array (	"s_date" => $day, 
							"s_month" => $month,
							"s_year" => $year,
							"f_date" => $day, 
							"f_month" => $month,
							"f_year" => $year,
							"name" => $post,
							"type" => "10");
	}
	if ($noglans != "") {											// Браковенчание не совершается по вторникам, четвергам и субботам
		$result[] = array (	"s_date" => $day, 
							"s_month" => $month,
							"s_year" => $year,
							"f_date" => $day, 
							"f_month" => $month,
							"f_year" => $year,
							"name" => $noglans,
							"type" => "20");
	}
	return $result;
}